basePath: /api/v1
definitions:
  api.PageData:
    properties:
      list: {}
      pageNum:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  api.Response:
    properties:
      code:
        type: integer
      data: {}
      detail:
        type: string
      msg:
        type: string
      requestId:
        type: string
    type: object
  dto.Base64ImageUploadReq:
    properties:
      image:
        type: string
    type: object
  dto.GetAuthorizeUrlResp:
    properties:
      url:
        type: string
    type: object
  dto.ImageUrlUploadReq:
    properties:
      url:
        type: string
    type: object
  dto.KfAccountCreateReq:
    properties:
      account:
        type: string
      appId:
        type: string
      nickname:
        type: string
    type: object
  dto.KfAccountDeleteReq:
    properties:
      account:
        type: string
      appId:
        type: string
    type: object
  dto.KfAccountGetAllReq:
    properties:
      appId:
        type: string
    type: object
  dto.KfAccountSetDefaultReq:
    properties:
      account:
        type: string
      appId:
        type: string
    type: object
  dto.MenuClearReq:
    properties:
      appId:
        type: string
    type: object
  dto.SysConfigAddReq:
    properties:
      ValueType:
        type: string
      description:
        type: string
      name:
        type: string
      value:
        type: string
    type: object
  dto.SysConfigDeleteReq:
    properties:
      id:
        example: "0"
        type: string
    type: object
  dto.SysConfigLogPageQueryReq:
    properties:
      configId:
        example: "0"
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
    type: object
  dto.SysConfigPageQueryReq:
    properties:
      idOrder:
        type: string
      keyword:
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
    type: object
  dto.SysConfigUpdateReq:
    properties:
      description:
        type: string
      id:
        example: "0"
        type: string
      value:
        type: string
    type: object
  dto.SysDictAddReq:
    properties:
      description:
        type: string
      label:
        type: string
      name:
        type: string
    type: object
  dto.SysDictDeleteReq:
    properties:
      id:
        type: integer
    type: object
  dto.SysDictGetItemsReq:
    properties:
      name:
        type: string
    type: object
  dto.SysDictGetItemsResp:
    properties:
      list:
        items:
          $ref: '#/definitions/models.SysDictItem'
        type: array
    type: object
  dto.SysDictItemAddReq:
    properties:
      description:
        type: string
      dictName:
        type: string
      isDefault:
        type: boolean
      itemLabel:
        type: string
      itemValue:
        type: string
      sort:
        type: integer
    type: object
  dto.SysDictItemUpdateReq:
    properties:
      description:
        type: string
      id:
        type: integer
      isDefault:
        type: boolean
      itemLabel:
        type: string
      itemValue:
        type: string
      sort:
        type: integer
      status:
        type: integer
    type: object
  dto.SysDictPageQueryReq:
    properties:
      idOrder:
        type: string
      keyword:
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
    type: object
  dto.SysDictUpdateReq:
    properties:
      description:
        type: string
      id:
        type: integer
    type: object
  dto.SysPermissionAddReq:
    properties:
      anon:
        type: boolean
      auth:
        type: boolean
      description:
        type: string
      name:
        type: string
      parentId:
        example: "0"
        type: string
      type:
        type: string
    type: object
  dto.SysPermissionBatchAddReq:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.SysPermissionAddReq'
        type: array
    type: object
  dto.SysPermissionDeleteReq:
    properties:
      id:
        example: "0"
        type: string
    type: object
  dto.SysPermissionImportReq:
    properties:
      anon:
        type: boolean
      auth:
        type: boolean
      children:
        items:
          $ref: '#/definitions/dto.SysPermissionImportReq'
        type: array
      description:
        type: string
      name:
        type: string
      parentId:
        example: "0"
        type: string
      type:
        type: string
    type: object
  dto.SysPermissionPageQueryReq:
    properties:
      anon:
        type: boolean
      auth:
        type: boolean
      idOrder:
        type: string
      keyword:
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
      type:
        type: string
    type: object
  dto.SysPermissionTree:
    properties:
      anon:
        type: boolean
      auth:
        type: boolean
      children:
        items:
          $ref: '#/definitions/dto.SysPermissionTree'
        type: array
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      description:
        type: string
      id:
        example: "0"
        type: string
      key:
        example: "0"
        type: string
      name:
        type: string
      parentId:
        type: integer
      title:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
    type: object
  dto.SysPermissionUpdateReq:
    properties:
      anon:
        type: boolean
      auth:
        type: boolean
      description:
        type: string
      id:
        example: "0"
        type: string
      name:
        type: string
      parentId:
        example: "0"
        type: string
      type:
        type: string
    type: object
  dto.SysRoleAddReq:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  dto.SysRoleBindPermissionsReq:
    properties:
      permissionIds:
        items:
          type: integer
        type: array
      roleId:
        example: "0"
        type: string
    type: object
  dto.SysRoleDeleteReq:
    properties:
      id:
        example: "0"
        type: string
    type: object
  dto.SysRoleGetByNameReq:
    properties:
      name:
        type: string
    type: object
  dto.SysRoleGetPermissionTreeReq:
    properties:
      roleId:
        example: "0"
        type: string
    type: object
  dto.SysRolePageQueryReq:
    properties:
      idOrder:
        type: string
      name:
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
    type: object
  dto.SysRolePermissionTreeResp:
    properties:
      ownPermissionIds:
        items:
          type: integer
        type: array
      permissionTree:
        items:
          $ref: '#/definitions/dto.SysPermissionTree'
        type: array
    type: object
  dto.SysRoleUnbindUsersReq:
    properties:
      roleId:
        example: "0"
        type: string
      userIds:
        items:
          type: integer
        type: array
    type: object
  dto.SysRoleUpdateReq:
    properties:
      description:
        type: string
      id:
        example: "0"
        type: string
    type: object
  dto.SysSmsLogPageQueryReq:
    properties:
      createdAtEnd:
        type: string
      createdAtStart:
        type: string
      idOrder:
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
      phone:
        type: string
      templateId:
        type: string
    type: object
  dto.SysSmsSendReq:
    properties:
      phone:
        type: string
      scene:
        type: string
    type: object
  dto.SysSmsSendToMyselfReq:
    properties:
      scene:
        type: string
    type: object
  dto.SysUserAddResp:
    properties:
      id:
        example: "0"
        type: string
      initPassword:
        type: string
    type: object
  dto.SysUserBindEmailReq:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
  dto.SysUserBindMFAKeyResp:
    properties:
      recoverCode:
        type: string
    type: object
  dto.SysUserBindMFAReq:
    properties:
      code:
        type: string
      enableMFA:
        type: boolean
      secret:
        type: string
    type: object
  dto.SysUserBindPhoneReq:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  dto.SysUserChangePasswordReq:
    properties:
      newPassword:
        type: string
    type: object
  dto.SysUserCheckIdentityReq:
    properties:
      checkType:
        type: string
      code:
        type: string
      operation:
        type: string
    type: object
  dto.SysUserGenerateMFAKeyResp:
    properties:
      secret:
        type: string
      url:
        type: string
    type: object
  dto.SysUserGetOAuth2UrlResp:
    properties:
      url:
        type: string
    type: object
  dto.SysUserGetReq:
    properties:
      id:
        example: "0"
        type: string
    type: object
  dto.SysUserGetWxLoginResultReq:
    properties:
      state:
        type: string
    type: object
  dto.SysUserGetWxLoginUrlResp:
    properties:
      state:
        type: string
      url:
        type: string
    type: object
  dto.SysUserInsertReq:
    properties:
      email:
        type: string
      nickname:
        type: string
      phone:
        type: string
      realName:
        type: string
      username:
        type: string
    type: object
  dto.SysUserLoginByPasswordReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.SysUserLoginByPhoneReq:
    properties:
      phone:
        type: string
      smsCode:
        type: string
    type: object
  dto.SysUserLoginResp:
    properties:
      expireTimeSeconds:
        type: integer
      token:
        type: string
    type: object
  dto.SysUserPageQueryReq:
    properties:
      excludeRoleId:
        example: "0"
        type: string
      idOrder:
        type: string
      keyword:
        type: string
      nickname:
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
      phone:
        type: string
      realName:
        type: string
      roleId:
        example: "0"
        type: string
      status:
        type: integer
      username:
        type: string
    type: object
  dto.SysUserPerfectInfoReq:
    properties:
      avatar:
        type: string
      nickname:
        type: string
      wechat:
        type: string
      wechatNickname:
        type: string
      wechatQrCode:
        type: string
    type: object
  dto.SysUserPersonalInfoResp:
    properties:
      permissions:
        items:
          type: string
        type: array
      roles:
        items:
          type: string
        type: array
      user:
        $ref: '#/definitions/models.SysUser'
    type: object
  dto.SysUserResetPasswordReq:
    properties:
      id:
        example: "0"
        type: string
    type: object
  dto.SysUserSendVerifyEmailReq:
    properties:
      email:
        type: string
      scene:
        type: string
    type: object
  dto.SysUserShouldCheckIdentityReq:
    properties:
      operation:
        type: string
    type: object
  dto.SysUserShouldCheckIdentityResp:
    properties:
      checkTypes:
        items:
          type: string
        type: array
      defaultCheckType:
        type: string
      shouldCheck:
        type: boolean
    type: object
  dto.SysUserUpdatePasswordReq:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  dto.SysUserUpdateStatusReq:
    properties:
      id:
        example: "0"
        type: string
      status:
        type: integer
    type: object
  dto.UploadFileResp:
    properties:
      url:
        type: string
    type: object
  dto.WxAuthorizerPageQueryReq:
    properties:
      keyword:
        type: string
      pageNum:
        type: integer
      pageSize:
        type: integer
    type: object
  models.SysConfig:
    properties:
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      description:
        type: string
      id:
        example: "0"
        type: string
      name:
        type: string
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
      value:
        type: string
      valueType:
        type: string
    type: object
  models.SysConfigLog:
    properties:
      configId:
        type: integer
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      id:
        example: "0"
        type: string
      newValue:
        type: string
      oldValue:
        type: string
    type: object
  models.SysDict:
    properties:
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      del:
        type: boolean
      deletedAt:
        type: string
      deletedBy:
        example: "0"
        type: string
      description:
        type: string
      id:
        type: integer
      label:
        type: string
      name:
        type: string
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
    type: object
  models.SysDictItem:
    properties:
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      description:
        type: string
      dictName:
        type: string
      id:
        type: integer
      isDefault:
        type: boolean
      itemLabel:
        type: string
      itemValue:
        type: string
      sort:
        type: integer
      status:
        type: integer
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
    type: object
  models.SysPermission:
    properties:
      anon:
        type: boolean
      auth:
        type: boolean
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      description:
        type: string
      id:
        example: "0"
        type: string
      name:
        type: string
      parentId:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
    type: object
  models.SysRole:
    properties:
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      description:
        type: string
      id:
        example: "0"
        type: string
      name:
        type: string
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
    type: object
  models.SysSmsLog:
    properties:
      content:
        type: string
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      id:
        example: "0"
        type: string
      phone:
        type: string
      remark:
        type: string
      scene:
        type: string
      status:
        type: string
      templateCode:
        type: string
      vendor:
        type: string
    type: object
  models.SysUser:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      email:
        type: string
      enableMFA:
        type: boolean
      id:
        example: "0"
        type: string
      isBindMfaDevice:
        type: boolean
      lastLoginIp:
        type: string
      lastLoginTime:
        type: string
      nickname:
        type: string
      openId:
        type: string
      passwordResetTime:
        type: string
      phone:
        type: string
      realName:
        type: string
      status:
        type: integer
      superAdmin:
        type: boolean
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
      username:
        type: string
      wechat:
        type: string
      wechatNickname:
        type: string
      wechatQrCode:
        type: string
    type: object
  models.WxAuthorizer:
    properties:
      authorizerAppid:
        type: string
      componentAppid:
        type: string
      createdAt:
        type: string
      createdBy:
        example: "0"
        type: string
      defaultKfAccount:
        type: string
      headImg:
        type: string
      id:
        example: "0"
        type: string
      nickName:
        type: string
      principalName:
        type: string
      qrcodeUrl:
        type: string
      serviceType:
        type: string
      updatedAt:
        type: string
      updatedBy:
        example: "0"
        type: string
      userName:
        type: string
      verifyType:
        type: string
    type: object
host: 127.0.0.1:10000
info:
  contact:
    email: xxx@qq.com
    name: xxx
    url: http://xxx.com
  description: xxx管理后台API文档
  title: Admin API
  version: 1.0.0
paths:
  /file/download_and_store:
    post:
      consumes:
      - application/json
      description: 下载网络图片并转存
      parameters:
      - description: 网络图片URL
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.ImageUrlUploadReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UploadFileResp'
              type: object
      summary: 下载网络图片并转存
      tags:
      - 文件上传
  /file/upload_base64_image:
    post:
      consumes:
      - application/json
      description: 上传Base64格式图片
      parameters:
      - description: base64格式图片
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.Base64ImageUploadReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UploadFileResp'
              type: object
      summary: 上传Base64格式图片
      tags:
      - 文件上传
  /file/upload_blob_image:
    post:
      consumes:
      - application/json
      description: 上传blob格式图片
      parameters:
      - description: blob格式图片
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.Base64ImageUploadReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UploadFileResp'
              type: object
      summary: 上传blob格式图片
      tags:
      - 文件上传
  /file/upload_image:
    post:
      consumes:
      - multipart/form-data
      description: 上传图片
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UploadFileResp'
              type: object
      summary: 上传图片
      tags:
      - 文件上传
  /sys/config/add:
    post:
      consumes:
      - application/json
      description: 添加配置
      parameters:
      - description: 配置信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysConfigAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 添加配置
      tags:
      - 配置管理
  /sys/config/delete:
    post:
      consumes:
      - application/json
      description: 根据id删除配置
      parameters:
      - description: 要删除的配置ID
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysConfigDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 删除配置
      tags:
      - 配置管理
  /sys/config/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询配置
      parameters:
      - description: 配置筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysConfigPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysConfig'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询配置
      tags:
      - 配置管理
  /sys/config/page_query_log:
    post:
      consumes:
      - application/json
      description: 分页查询配置日志
      parameters:
      - description: 配置日志筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysConfigLogPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysConfigLog'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询配置日志
      tags:
      - 配置管理
  /sys/config/update:
    post:
      consumes:
      - application/json
      description: 根据id修改配置信息
      parameters:
      - description: 配置信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysConfigUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 修改配置
      tags:
      - 配置管理
  /sys/dict/add:
    post:
      consumes:
      - application/json
      description: 添加字典
      parameters:
      - description: 字典信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysDictAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 添加字典
      tags:
      - 字典管理
  /sys/dict/delete:
    post:
      consumes:
      - application/json
      description: 根据id删除字典
      parameters:
      - description: 要删除的字典ID
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysDictDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 删除字典
      tags:
      - 字典管理
  /sys/dict/item/add:
    post:
      consumes:
      - application/json
      description: 添加字典项
      parameters:
      - description: 字典项
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictItemAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 添加字典项
      tags:
      - 字典管理
  /sys/dict/item/batch_get_by_names:
    post:
      consumes:
      - application/json
      description: 根据字典名称数组获取所有项目
      parameters:
      - description: 字典名称数组
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictGetItemsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  additionalProperties:
                    items:
                      $ref: '#/definitions/models.SysDictItem'
                    type: array
                  type: object
              type: object
      security:
      - RequireLogin: []
      summary: 根据字典名称数组获取所有项目
      tags:
      - 字典管理
  /sys/dict/item/get_by_name:
    post:
      consumes:
      - application/json
      description: 根据字典名称获取所有项目
      parameters:
      - description: 字典名称
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictGetItemsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysDictGetItemsResp'
              type: object
      security:
      - RequireLogin: []
      summary: 根据字典名称获取所有项目
      tags:
      - 字典管理
  /sys/dict/item/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询字典
      parameters:
      - description: 字典筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysDictPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysDict'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询字典
      tags:
      - 字典管理
  /sys/dict/item/update:
    post:
      consumes:
      - application/json
      description: 修改字典项
      parameters:
      - description: 字典项
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictItemUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 修改字典项
      tags:
      - 字典管理
  /sys/dict/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询字典
      parameters:
      - description: 字典筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysDictPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysDict'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询字典
      tags:
      - 字典管理
  /sys/dict/update:
    post:
      consumes:
      - application/json
      description: 根据id修改字典信息
      parameters:
      - description: 字典信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysDictUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 修改字典
      tags:
      - 字典管理
  /sys/permission/add:
    post:
      consumes:
      - application/json
      description: 添加权限
      parameters:
      - description: 权限信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysPermissionAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 添加权限
      tags:
      - 权限管理
  /sys/permission/batch_add:
    post:
      consumes:
      - application/json
      description: 批量添加权限
      parameters:
      - description: 权限筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysPermissionBatchAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 批量添加权限
      tags:
      - 权限管理
  /sys/permission/batch_import:
    post:
      consumes:
      - application/json
      description: 批量导入权限
      parameters:
      - description: 权限树
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysPermissionImportReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 批量导入权限
      tags:
      - 权限管理
  /sys/permission/bind_users:
    post:
      consumes:
      - application/json
      description: 以树形结构呈现所有权限
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.SysPermissionTree'
                  type: array
              type: object
      security:
      - RequireLogin: []
      summary: 获取权限树
      tags:
      - 权限管理
  /sys/permission/delete:
    post:
      consumes:
      - application/json
      description: 根据id删除权限
      parameters:
      - description: 要删除的权限ID
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysPermissionDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 删除权限
      tags:
      - 权限管理
  /sys/permission/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询权限
      parameters:
      - description: 权限筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysPermissionPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysPermission'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询权限
      tags:
      - 权限管理
  /sys/permission/update:
    post:
      consumes:
      - application/json
      description: 根据id修改权限信息
      parameters:
      - description: 权限信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysPermissionUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 修改权限
      tags:
      - 权限管理
  /sys/role/add:
    post:
      consumes:
      - application/json
      description: 添加角色
      parameters:
      - description: 角色信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysRoleAddReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 添加角色
      tags:
      - 角色管理
  /sys/role/bind_permissions:
    post:
      consumes:
      - application/json
      description: 批量关联权限给角色，会覆盖之前角色拥有的权限
      parameters:
      - description: 角色id和权限id数组
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleBindPermissionsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 给角色授予权限
      tags:
      - 角色管理
  /sys/role/bind_users:
    post:
      consumes:
      - application/json
      description: 角色关联用户，关联后用户拥有该角色和该角色的所有权限
      parameters:
      - description: 需要绑定的角色id和用户id数组
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleBindPermissionsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 授权角色给用户
      tags:
      - 角色管理
  /sys/role/delete:
    post:
      consumes:
      - application/json
      description: 根据id删除角色
      parameters:
      - description: 要删除的角色ID
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysRoleDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 删除角色
      tags:
      - 角色管理
  /sys/role/get_by_name:
    post:
      consumes:
      - application/json
      description: 根据名字获取角色
      parameters:
      - description: 角色名称
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysRoleGetByNameReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 根据名字获取角色
      tags:
      - 角色管理
  /sys/role/get_permission_tree:
    post:
      consumes:
      - application/json
      description: 获取角色拥有的权限树
      parameters:
      - description: 角色id
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleGetPermissionTreeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysRolePermissionTreeResp'
              type: object
      security:
      - RequireLogin: []
      summary: 获取角色拥有的权限树
      tags:
      - 角色管理
  /sys/role/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询角色
      parameters:
      - description: 角色筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysRolePageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysRole'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询角色
      tags:
      - 角色管理
  /sys/role/unbind_users:
    post:
      consumes:
      - application/json
      description: 取消角色关联用户，取消后用户不再拥有该角色
      parameters:
      - description: 需要解绑的角色id和用户id数组
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleUnbindUsersReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 取消授权角色给用户
      tags:
      - 角色管理
  /sys/role/update:
    post:
      consumes:
      - application/json
      description: 根据id修改角色信息
      parameters:
      - description: 角色信息
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysRoleUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 修改角色
      tags:
      - 角色管理
  /sys/sms/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询短信记录
      parameters:
      - description: 短信记录筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysSmsLogPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysSmsLog'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询短信记录
      tags:
      - 短信管理
  /sys/sms/send:
    post:
      consumes:
      - application/json
      description: 发送短信
      parameters:
      - description: 手机号和发送场景
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysSmsSendReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      summary: 发送短信
      tags:
      - 短信管理
  /sys/sms/send_to_myself:
    post:
      consumes:
      - application/json
      description: 发送短信(登录后)
      parameters:
      - description: 发送场景
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysSmsSendToMyselfReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 发送短信(登录后)
      tags:
      - 短信管理
  /sys/user/add:
    post:
      consumes:
      - application/json
      description: 添加用户
      parameters:
      - description: 用户信息
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserInsertReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserAddResp'
              type: object
      security:
      - RequireLogin: []
      summary: 添加用户
      tags:
      - 用户管理
  /sys/user/bind_email:
    post:
      consumes:
      - application/json
      description: 绑定邮箱
      parameters:
      - description: 邮箱和邮箱验证码
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserBindEmailReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 绑定邮箱
      tags:
      - 用户管理
  /sys/user/bind_mfa_device:
    post:
      consumes:
      - application/json
      description: 绑定多因素认证设备
      parameters:
      - description: mfa信息
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserBindMFAReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserBindMFAKeyResp'
              type: object
      security:
      - RequireLogin: []
      summary: 绑定多因素认证设备
      tags:
      - 用户管理
  /sys/user/bind_phone:
    post:
      consumes:
      - application/json
      description: 绑定手机
      parameters:
      - description: 手机号和短信验证码
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserBindPhoneReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 绑定手机
      tags:
      - 用户管理
  /sys/user/bind_wechat:
    get:
      consumes:
      - application/json
      description: 微信授权重定向
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserGetOAuth2UrlResp'
              type: object
      summary: 绑定微信
      tags:
      - 用户管理
  /sys/user/change_password:
    post:
      consumes:
      - application/json
      description: 更新密码（无需旧密码，但是需要先进行身份验证）
      parameters:
      - description: 手机号和验证码
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 更新密码（无需旧密码，但是需要先进行身份验证）
      tags:
      - 用户管理
  /sys/user/check_identity:
    post:
      consumes:
      - application/json
      description: 身份验证
      parameters:
      - description: 验证方式和验证码
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserCheckIdentityReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 身份验证
      tags:
      - 用户管理
  /sys/user/generate_mfa_device:
    post:
      consumes:
      - application/json
      description: 生成多因素认证密钥
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserGenerateMFAKeyResp'
              type: object
      security:
      - RequireLogin: []
      summary: 生成多因素认证密钥
      tags:
      - 用户管理
  /sys/user/get_by_id:
    post:
      consumes:
      - application/json
      description: 根据id获取用户信息
      parameters:
      - description: 用户id
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserGetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.SysUser'
              type: object
      security:
      - RequireLogin: []
      summary: 根据id获取用户信息
      tags:
      - 用户管理
  /sys/user/get_oauth2_url:
    post:
      consumes:
      - application/json
      description: 获取绑定微信的授权链接
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserGetOAuth2UrlResp'
              type: object
      security:
      - RequireLogin: []
      summary: 获取绑定微信的授权链接
      tags:
      - 用户管理
  /sys/user/get_personal_info:
    post:
      consumes:
      - application/json
      description: 获取个人信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserPersonalInfoResp'
              type: object
      security:
      - RequireLogin: []
      summary: 获取个人信息
      tags:
      - 用户管理
  /sys/user/get_wechat_login_result:
    get:
      consumes:
      - application/json
      description: 获取微信登录结果
      parameters:
      - description: 登录id
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserGetWxLoginResultReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserGetOAuth2UrlResp'
              type: object
      summary: 获取微信登录结果
      tags:
      - 用户管理
  /sys/user/get_wechat_login_url:
    post:
      consumes:
      - application/json
      description: 获取微信登录链接
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserGetWxLoginUrlResp'
              type: object
      security:
      - RequireLogin: []
      summary: 获取微信登录链接
      tags:
      - 用户管理
  /sys/user/login_by_password:
    post:
      consumes:
      - application/json
      description: 账号密码登录
      parameters:
      - description: 账号密码
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserLoginByPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserLoginResp'
              type: object
      summary: 账号密码登录
      tags:
      - 用户管理
  /sys/user/login_by_phone:
    post:
      consumes:
      - application/json
      description: 手机号登录
      parameters:
      - description: 手机号和验证码
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserLoginByPhoneReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserLoginResp'
              type: object
      summary: 手机号登录
      tags:
      - 用户管理
  /sys/user/login_by_wechat:
    get:
      consumes:
      - application/json
      description: 微信授权重定向
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserGetOAuth2UrlResp'
              type: object
      summary: 微信登录
      tags:
      - 用户管理
  /sys/user/logout:
    post:
      consumes:
      - application/json
      description: 退出登录
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 退出登录
      tags:
      - 用户管理
  /sys/user/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询用户
      parameters:
      - description: 用户筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.SysUserPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.SysUser'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询用户
      tags:
      - 用户管理
  /sys/user/perfect_info:
    post:
      consumes:
      - application/json
      description: 完善基本信息
      parameters:
      - description: 用户基本信息
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserPerfectInfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 完善基本信息
      tags:
      - 用户管理
  /sys/user/reset_password:
    post:
      consumes:
      - application/json
      description: 重置密码
      parameters:
      - description: 用户ID
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserResetPasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 重置密码
      tags:
      - 用户管理
  /sys/user/send_verify_email:
    post:
      consumes:
      - application/json
      description: 发送验证邮件
      parameters:
      - description: 邮箱
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserSendVerifyEmailReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 发送验证邮件
      tags:
      - 用户管理
  /sys/user/should_check_identity:
    post:
      consumes:
      - application/json
      description: 当前操作是否需要进行身份验证
      parameters:
      - description: 操作
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserShouldCheckIdentityReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysUserShouldCheckIdentityResp'
              type: object
      security:
      - RequireLogin: []
      summary: 当前操作是否需要进行身份验证
      tags:
      - 用户管理
  /sys/user/switch_enable_mfa:
    post:
      consumes:
      - application/json
      description: 切换是否开启MFA
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 切换是否开启MFA
      tags:
      - 用户管理
  /sys/user/unbind_mfa_device:
    post:
      consumes:
      - application/json
      description: 解绑多因素认证设备
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 解绑多因素认证设备
      tags:
      - 用户管理
  /sys/user/unbind_wechat:
    get:
      consumes:
      - application/json
      description: 解绑微信
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      summary: 解绑微信
      tags:
      - 用户管理
  /sys/user/update_password:
    post:
      consumes:
      - application/json
      description: 更新密码（需要旧密码）
      parameters:
      - description: 手机号和验证码
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserUpdatePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 更新密码（需要旧密码）
      tags:
      - 用户管理
  /sys/user/update_status:
    post:
      consumes:
      - application/json
      description: 修改用户状态
      parameters:
      - description: 用户id和状态
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserUpdateStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 修改用户状态
      tags:
      - 用户管理
  /wx/authorizer/authorize/redirect:
    get:
      consumes:
      - application/json
      description: 获取auth_code
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 授权回调
      tags:
      - 授权公众号管理
  /wx/authorizer/create_kf_account:
    post:
      consumes:
      - application/json
      description: 为公众号创建客服账号
      parameters:
      - description: 客服账号和昵称
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.KfAccountCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 创建客服账号
      tags:
      - 授权公众号管理
  /wx/authorizer/delete_kf_account:
    post:
      consumes:
      - application/json
      description: 删除客服账号
      parameters:
      - description: 公众号appId
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.KfAccountDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 删除客服账号
      tags:
      - 授权公众号管理
  /wx/authorizer/delete_menu:
    post:
      consumes:
      - application/json
      description: 清空菜单
      parameters:
      - description: 公众号appId
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.MenuClearReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 清空菜单
      tags:
      - 授权公众号管理
  /wx/authorizer/get_all_kf_accounts:
    post:
      consumes:
      - application/json
      description: 获取公众号的所有客服账号
      parameters:
      - description: 公众号appId
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.KfAccountGetAllReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 获取公众号的所有客服账号
      tags:
      - 授权公众号管理
  /wx/authorizer/get_authorize_url:
    post:
      consumes:
      - application/json
      description: 获取授权链接，微信扫码访问该连接，会跳转到选择公众号授权给第三方平台页面
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.GetAuthorizeUrlResp'
              type: object
      security:
      - RequireLogin: []
      summary: 获取公众号授权连接
      tags:
      - 授权公众号管理
  /wx/authorizer/get_menu:
    post:
      consumes:
      - application/json
      description: 获取菜单
      parameters:
      - description: 公众号appId
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.MenuClearReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 获取菜单
      tags:
      - 授权公众号管理
  /wx/authorizer/page_query:
    post:
      consumes:
      - application/json
      description: 分页查询授权公众号
      parameters:
      - description: 授权公众号筛选条件
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.WxAuthorizerPageQueryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageData'
                  - properties:
                      List:
                        $ref: '#/definitions/models.WxAuthorizer'
                    type: object
              type: object
      security:
      - RequireLogin: []
      summary: 分页查询授权公众号
      tags:
      - 授权公众号管理
  /wx/authorizer/set_default_kf_account:
    post:
      consumes:
      - application/json
      description: 设置默认的客服账号（使用该账号给用户发送消息）
      parameters:
      - description: 公众号appId
        in: body
        name: param
        schema:
          $ref: '#/definitions/dto.KfAccountSetDefaultReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - RequireLogin: []
      summary: 设置默认的客服账号（使用该账号给用户发送消息）
      tags:
      - 授权公众号管理
  /wx/authorizer/sync_info:
    post:
      consumes:
      - application/json
      description: 同步授权方信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 同步授权方信息
      tags:
      - 授权公众号管理
securityDefinitions:
  RequireLogin:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
